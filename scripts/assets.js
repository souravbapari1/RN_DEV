const fs = require('fs');
const path = require('path');

const IMAGES_DIR = path.resolve(__dirname, '../assets');
const OUTPUT_FILE = path.resolve(__dirname, '../src/constants/assets.ts');

const validExtensions = ['.png', '.jpg', '.jpeg', '.webp', '.json'];

const imageMap = {};

function walkDir(currentPath, relativePath = '') {
    const entries = fs.readdirSync(currentPath);

    for (const entry of entries) {
        const fullPath = path.join(currentPath, entry);
        const stat = fs.statSync(fullPath);

        if (stat.isDirectory()) {
            walkDir(fullPath, path.join(relativePath, entry));
        } else if (stat.isFile() && validExtensions.includes(path.extname(entry).toLowerCase())) {
            const key = path.join(relativePath, path.basename(entry, path.extname(entry)))
                .replace(/\\/g, '/') // Normalize Windows paths
                .replace(/\s+/g, '_'); // Optional: Replace spaces with underscores

            const requirePath = `@/assets/${path.join(relativePath, entry).replace(/\\/g, '/')}`;
            imageMap[key] = `require('${requirePath}')`;
        }
    }
}

walkDir(IMAGES_DIR);

// Format output
const content =
    `// Auto-generated by scripts/assets.js

export const assets = {
${Object.entries(imageMap)
        .map(([key, value]) => `  '${key}': ${value},`)
        .join('\n')}
};
`;

fs.writeFileSync(OUTPUT_FILE, content, 'utf8');
console.log('âœ… imageMap.js generated successfully!');
